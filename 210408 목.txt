오후 3:15 2021-04-08 목

~스태틱(애니메이숀 없는) 매쉬 로드중~
	=>굳이 클론으로 안만드신답니다요.
D3DXLoadMeshFromX에서 XFile을 로딩하면서 xFile내에있는
adjacency, Material,  Shader 등등의 정보를 받아올 애들 선언하자. D3DXBuffer
	=> 근데 쉐이더는 일단 우리가 직접 해볼꺼라서 안 부른대요.
LPD3DXMESH 라는 곳으로 반환받기.
	->D3DXSprite같이 정보 담고 있는 친구.

~애니메이션 매쉬 로드~
D3DXLoadMeshHierarchyFormX();
->골격을 같이 로드함.
점-폴리곤-서브셋-매쉬-매쉬컨테이너-애니메이션매쉬 => 이런 구조임. (스태틱 매쉬를 여러개 모아놓은 형태)
		->매쉬컨테이너는 교체 혹은 변화가 있는 매쉬들을 나눠놓고 모아놓은것.
=> ID3DXAllocateHierarchy 를 상속받는 클래스를 만들어서 필요한 순수가상함수들을 직접 구현해서 써야함.
1. CHierarchyLoader 클래스 만들기
2. AnimMesh 로드 하는 클래스에서 방금만든 CHierarchyLoader 를 멤버로 추가.
3. D3DXLoadMeshHierarchyFormX(); 에 인자로 넣어주기 (그럼 알아서 상속받은 함수들을 호출하면서 생성함. 근데 아직 안 만듦)
4. LPD3DXFRAME 구조체 선언. -> 뼈 하나의 정보를 가지고 있을 구조체.
	안에 LPD3DXMESHCONTAINER은 아까 위에서 말한 매쉬 컨테이너인디 보통 null나오거나 아니면 하나만 넣어놓음.
	기준이 될 매쉬 : 보통 발이나 하체로함. 딱 고정되어있을거.
	Sibling : 형제 뼈 / FirstChild : 그 다음 첫 뼈 => 보통 본은 루트본이라고 애니메이션에서 진입점이 될 본이 있음.
		=> 진입점, 루트본으로 들어와서 저것들을 타고 타고 들어가서 모든 본을 다 순회 할라구 하는거.
			=> 머리->(자식)몸통->(자식)오른팔->(자식)엄지손가락->(형제)검지->(자식없음)(형제)중지......->(다시 오른팔의 형제)왼팔.... 이런식으로 다 돌아가게 함.
5. D3DXLoadMeshHierarchyFormX();의 마지막 전 인자 : 루트프레임(루트본, 진입점)의 주소를 넘겨주것다. output용 따블포인터 주면 됨. 
6. 마지막인자 : 애니메이숀ㅡ칸트롤라 -> 일단 nullptr 주심.

다시 1번으로 돌아가서 상속받은 애들 직접 구현하기.
CreateFrame -> 뼈 개수만큼 실행됨. => 뼈 하나를 할당해주는 역할
딴것도 지가 알아서 필요할때 불러서 해줌. -> 다렉이 다 할거면서 왜 우리보고 만들라고하냐? 
		=> 혹시나 따른 값들이 더 필요한 경우 보통 D3DXFrame을 상속받는 struct를 하나 새로 만들고 원하는 값들 더 추가해서 쓸 수 도 있게 해놓은거



	




