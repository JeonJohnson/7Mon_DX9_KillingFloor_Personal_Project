오후 3:10 2021-04-13 화
--------------------------------
나는 한번 띄어보고 스태틱+다이내믹 묶어서 만들고(Mesh 클래스) 애니메이션 컨트롤 컴포넌트 넣으면 애니메이션 나오도록.

학원에서는 매쉬로드 + 클라이언트 밑작업

집에서는 MFC + 리소스 작업
--------------------------------
애니- 메이숀 매쉬 (다이내믹 매 쉬)
	-> 여러 스태틱 매쉬들을 계층관계로 묶어놓은것. 
		(매쉬 컨테이너 = 스태틱 매쉬)
다이내믹매쉬로드 클래스 
하이어라키 로드 클래스
애니메이숀 칸트롤 클래스

하이어라키 : 계층

스키닝 : 애니메이션이 돌아갈 때 늘어나는 살 부분을 선형보간으로 매꿔주는거.
	=> 일단은 소프트웨어 스키닝(CPU연산)을 하고 나중에 쉐이더 배울때 하드웨어(GPU연산) 스키닝을 함.

------------
D3DXFRAME -> 매쉬를 이루는 뼈의 정보를 보관하는 구조체.
	LPSTR name : 삼디막스에서 그 본 이름
	D3DXMATRIX TransformationMatrix : 본의 초기 위치 정보. (추후에 애니메이션 행렬에다가 요거 곱해주면 최종 위치가 나옴.)
	LPD3DXMESHCONTAINER pMeshContainer : 스태틱매쉬라고 보면 됨.
	struct D3DFRAME* pFrameSibling : 형제 본 (같은 어마이를 가지고 있는 본)
	struct D3DFRAME* pFrameFirstChild : 자식 본(내가 어마이가 되는 본)
		=> 두줄의 의미 : 루트가되는 본이 있고 거기를 시작으로 해서 함수를 재귀적으로 호출해서 타고타고들어가다가 자식이나 형제가 없는 새기가 나올때가지 돌릴꺼다 이거야.

D3DXMESHCONTAINER -> 스래릭 매쉬를 담아놓을 구조체
	name : 애니메이션에서는 본을 따라 갈꺼기 때문에 얘는 딱히 필요 x
	매쉬 데이타 : ㅇㅇ 걍 매쉬 안에 유니온으로 뭐 많은데 걍 좄까꼬 노말 매쉬 쓸꺼임 난 애초에 lod 모델링 따로 있떠라고
	머테리얼 : 아는 그 매테리얼 맞음
	LPD3DXEFFECTINSTANCE : 특수효과가 애니메이션안에 있을 때 사용하는거. 근데 안씀. 파일이 존나 무거워지기도 하고 따로 파티클이펙트 하믄딤
	
	LPD3DXSKININFO	pSkinInfo : 애니메이션 제어를 위해서 있는 컴객체. 중요한 친구!
------------
Update_FrameMatrices -> 자식, 형제 뼈들에 계속 파고들어서 계속 업데이트할 녀석.
	=> 여기서 부모행렬을 곱해주고 그 값을 보관해야하는데 없으니까 그때 정쌤이 상속받아 만든 구조체 처럼 만드렁서 써야하는 이유가 그거다 이거야.
	CombinedMatrix -> 부모행렬 곱해서 최종 행렬.
*_stdcall 방식이라서 사전 정의한 define이나 typedef 형태 있으면 씹창나는 경우 有, 

-------------
매쉬 컨테이너도 struct 확장형으로 만들자.

pFrameOffsetMatrix -> 애니메이숀 정보를 가지고 있을 행렬
CombinedTransformMatrix -> 동적할당으로 모든 콤바인드 매트릭스를 모아 놓을곳.
이 두가지를 곱한게
RenderingMatrix. => 이걸 가지고 렌더링을 할거다. 이거야.


킹치만.. 진짜 시발 뭐라는지 슬슬 어지럽다구~

----------
렌더링
OffsetMatrix랑 CombinedMatrix를 곱해서 RenderingMatrix를 만들고

originalMesh를 Lock- Unlock.















